@using Domain.Todos.DTOs
@using Client.Services.Api
@using Domain.Todos.Entities
@using Domain.Todos.Queries

@inject IApiService<TodoResultDTO, TodoCommand, TodoQueryParameter> TodoApiService
@inject IDialogService DialogService

<span class="fab">
    <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="@CreateItem" Title="Todoを追加" />
</span>

@code {
    [Parameter]
    public EventCallback<TodoResultDTO> OnCreateItem { get; set; }

    private async Task CreateItem()
    {
        var parameters = new DialogParameters { ["Command"] = new TodoCommand() };
        var options = new DialogOptions { MaxWidth = MaxWidth.Small };
        var dialog = DialogService.Show<TodoEditDialog>("Todoの作成", parameters, options);
        var result = await dialog.Result;

        if (!result.Cancelled) await OnCreateItem.InvokeAsync();
    }
}