@using Application.Todos.Models
@using Client.Services.Api

@inject TodoApiService TodoApiService
@inject IDialogService DialogService

<span class="todo-create-fab">
    <MudTooltip Text="Todoを追加" @bind-IsVisible="@_isVisible">
        <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="@CreateItem" />
    </MudTooltip>
</span>

@code {
    [Parameter]
    public EventCallback<TodoResultDTO> OnCreateItem { get; set; }

    private bool _isVisible { get; set; } = false;

    private async Task CreateItem()
    {
        var parameters = new DialogParameters { ["Command"] = new TodoCommand() };
        var options = new DialogOptions { MaxWidth = MaxWidth.Small };
        var dialog = DialogService.Show<TodoEditDialog>("Todoの作成", parameters, options);
        var result = await dialog.Result;

        // ダイアログを閉じるとツールチップが開くので抑制する
        await Task.Delay(10);
        _isVisible = false;

        if (!result.Cancelled) await OnCreateItem.InvokeAsync();
    }
}